name: WebServer CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: 
      - ready_for_review
      - review_request_removed
      - opened
  pull_request_target:
    types:
      - opened

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask
        pip install flask-restplus
        pip install -r requirements.txt
        pip install python-dotenv
        pip3 install wheel
        pip3 install flask
        pip3 install flask-restplus
        pip3 install gunicorn
        pip3 install boto
    - name: Run Tests
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        FLASK_APP: app.py
        FLASK_DEBUG: 1
        FLASK_ENV: development
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        S3_KEY: ${{ secrets.S3_KEY }}
        S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
        S3_PREFIXURL: ${{ secrets.S3_PREFIXURL }}
        AWS_KEY: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
        RDS_PWD: ${{ secrets.RDS_PWD }}
        RDS_DB: ${{ secrets.RDS_DB }}
        RDS_HOST: ${{ secrets.RDS_HOST }}
        API_LOGGEDINUSERID: ${{ secrets.API_LOGGEDINUSERID }}
        GITHUB_REPO_PATH: ${{ secrets.GITHUB_REPO_PATH }}
      run: |
        python tests.py
    - name: Validate Template
      run: |
        packer validate packerblank.json
    - name: Build Artifact
      run: |
        packer build packerblank.json
